# My tests

.[0]
[1,2,3]
1

.foo | .bar
{"foo": {"bar": 42}, "bar": "badvalue"}
42

{"x" : -1}
{"x":-1}
{"x": -1}

[.[]|.[1:3]?]
[1,null,true,false,"abcdef",{},{"a":1,"b":2},[],[1,2,3,4,5],[1,2]]
[null,"bc",[],[2,3],[2]]

.
1.2
1.2

..
{"a":1, "b":{"a":1}}
{"a":1,"b":{"a":1}}1{"a":1}1

.
-.5
-0.5

(., .) | .[]
{"a"       : 1, "b":{"a":1}  , "c":"a"  }
1{"a": 1}"a"1{  "a": 1}"a"

# Slice tests

.[-4:5]
"amongus"
"ng"

# JSON object tests

.address.city
{ "name": "Alice", "address": { "city": "New York", "street": "Main St" } }
"New York"

.job_title
{ "name": "Alice", "age": 30 }
null

.name
{}
null

.
{ "name": "Alice", "age": 30 }
{ "name": "Alice", "age": 30 }

.address?.city
{ "name": "Alice", "address": null }
null

.
{"a":{"b":{"c":{"d":{"e":{"f":{}}}}}}}
{"a":{"b":{"c":{"d":{"e":{"f":{}}}}}}}

.["foo", "bar"]
{"foo":1, "bar":2}
1 2

[."foo", ."bar"]
{"foo":1, "bar":2}
[1, 2]

.[.foo[][], "bar"]?[0]?.buh
{"foo":[{"buh":"foo"}], "bar":2}
"foo"

[1,2,.foo]
{"foo": "bruh"}
[1,2,"bruh"]

[{"hello": "world"}, [0] | .["hello", 0]?]
null
["world", 0]

.[.this[]]
{"this" : ["that"], "that" : 1}
1

.[.[0]:.[3]]
[1, 2, 3, 4]
[2, 3, 4]

[.[.[0], .[1] | .:(.[3], .[2])]]
[1, 2, 3, 4]
[[2, 3, 4], [2, 3], [3, 4], [3]]

.[null:2]
[1, 2, 3, 4]
[1, 2]

.[null:null]
[1, 2, 3, 4]
[1, 2, 3, 4]

[.hello[]]
{"hello": [[3],2,3]}
[[3], 2, 3]

[."hello"?[]]
{"hello": [[3],2,3]}
[[3], 2, 3]

.["hello", "world"][0]?[0]
{"hello": [[6],2,3], "world": "what"}
6

[.[0, 1, .[0] | ., 3]]
[1, 2, 3, 4]
[1, 4, 2, 4, 2, 4]

[.[-1, 0, "hi", true]?]
null
[null, null, null]

[.[0:3, "hi"]]
null
[null, null]

[.[0, 1 : 2, 3]]
[1, 2, 3, 4]
[[1,2],[1,2,3],[2],[2,3]]

[.[0, 1 : 2, "hi"]?]
[1, 2, 3, 4]
[[1,2],[2]]

.[1:3]
[]
[]

.[0:5]
"hello"
"hello"

.["\u263a"]
{"â˜º": 1}
1

.[[1,2,3], 0]
[1,2,3,4,5]
[0] 1

true and .
null
false

1 == .[2]
[3,2,1]
true

if .[] | . , not then 1 else [1] end
[true, false, true]
1 [1] [1] 1 1 [1]

try .[1][1] catch .
[true, false, true]
"Iterator not applicable"
